<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ToolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdPreviousPage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAD7SURBVDhPY2AYNKBn883/aTPPgDGIjcthOOWTp538f+bp
        fzAGsbEZAFODVT5+0lG4ASA2ugGE5Bmieg/8P/74PxiD2MgGgPggl+GSB6sN7dj9/8D9/2AMYsMMALFB
        mmFy6PJwi/ybtv7ffvs/GIPYIAkQDdIME0eXR/GmV+2G/+uu/QdjEBskCaKnHngNF0eXRzHApXzV/6WX
        /oMxiA2TBLF7d7+Cy6HLww2xL1r6f965/2AMYiObDuK3bX+BUx6s1ip3wX9gGgJjEBs9GkFijVue45Rn
        MMucAzcAxMaWkEDiDZuf/ccqn9az+b9x2kwwBrFxJWVC8vTPmwDnpzNoCLfmTAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="cmdNextPage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAEBSURBVDhPzZOvC8JAHMXvfxIMFovJYrJYDMLAYLGYBDWI
        QYugIIhYLAYRphgsKyKCGAyCGAziD/SPePoObnw3N6wOHnf3Pm/vNnZT6m+upn2E1dsi7IEMZ4bzr1yu
        u8H2CnAMKjE8NJNtr3QBxbm/5BdXmZaD9QVaLOFalkjuZzqXbizhnOGKJfRMieTSdzdJ1eZYnOARS+gz
        JLnxPK+ZLE8xOcCjjvMCfQYlN56nIFEaY7SHq9byCXomJLn03ZJ4cYTBDlr1xQNcyx0k9zOdixWG+JwR
        VGd3cO7/jIYzE8RVNN9Hxb6BY9BBos+bqcCM1bQRsXqhR9lwZjj/m39QvQGwVzNoK08uBQAAAABJRU5E
        rkJggg==
</value>
  </data>
  <data name="cmdXMarginPlus.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAADBSURBVDhPY2AYtKBn883/aTPPgDGITbJDk6ed/H/m6X8w
        BrFJNiB+0lG4ASA2yQZE9R74f/zxfzAGsQkakNaz+b9Z5pz/VrkL/tsXLf3vUr7q/4H7/8E4tGM32BCQ
        S0DewRomxmkz/wPDC4znnfv/f+ml///XXfv/f/ttiCEgl8DCBBSwGC6i2ABsXgC5AoSJ8gK6k0DhAPIK
        CIPYBAMRXQEoMGFhAmKTbAAoRmAGgNgkGwAKE1DAgjCITbIBdNMAAIfj79eXcImRAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="cmdXMarginMinus.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAB6SURBVDhPY2AYBYMoBNJ6Nv83y5zz3yp3wX/7oqX/XcpX
        /feq3fDfv2nr/9CO3f+jeg/8j5909H/ytJP/ezbf/I/hdOO0mf9nnvkPxvPO/f+/9NL//+uu/f+//fb/
        /wfu//9//PH//2eeQnAaUBH1DaDYC4MoOkaeUwDG1o3vB/DKwQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="cmdYMarginPlus.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAADBSURBVDhPY2AYtKBn883/aTPPgDGITbJDk6ed/H/m6X8w
        BrFJNiB+0lG4ASA2yQZE9R74f/zxfzAGsQkakNaz+b9Z5pz/VrkL/tsXLf3vUr7q/4H7/8E4tGM32BCQ
        S0DewRomxmkz/wPDC4znnfv/f+ml///XXfv/f/ttiCEgl8DCBBSwGC6i2ABsXgC5AoSJ8gK6k0DhAPIK
        CIPYBAMRXQEoMGFhAmKTbAAoRmAGgNgkGwAKE1DAgjCITbIBdNMAAIfj79eXcImRAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="cmdYMarginMinus.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAB6SURBVDhPY2AYBYMoBNJ6Nv83y5zz3yp3wX/7oqX/XcpX
        /feq3fDfv2nr/9CO3f+jeg/8j5909H/ytJP/ezbf/I/hdOO0mf9nnvkPxvPO/f+/9NL//+uu/f+//fb/
        /wfu//9//PH//2eeQnAaUBH1DaDYC4MoOkaeUwDG1o3vB/DKwQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAQAAAAAADoAgAAJgAAABAQEAAAAAAAKAEAAA4DAAAoAAAAIAAAAEAAAAABAAQAAAAAAIAC
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAMDAwACAgIAAAAD/AAD/
        AAAA//8A/wAAAP8A/wD//wAA////AHd3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3
        d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3dmZnciIiIiIiIiIiIiIiIiZmZ3IiIiIiIiIiIiIiIiImZm
        dyIiIiIAAAAiIiIiIiJmZnciIiIiAAAAIiIiIiIid3d3d3f/AHe7dwB3d3d3d3d3d3d3/wB3u3cAd3d3
        d3dVVVV3/wB3u3e7dwB3IiIiVVVVd/8Ad7t3u3cAdyIiIlVVVXf/ALt3u3czAHciIiJVVVV3/wC7d7t3
        MwB3IiIid3d3d/8AdwAAADMAd3d3d3d3d3f/AHcAAAAzAHd3d3dmZmZm/wAAu3e7AAAiInd3ZmZmZv8A
        ALt3uwAAIiJ3d2ZmZmb/ALt3u3e7ACIid3dmZmZm/wC7d7t3uwAiInd3d3d3d3d3ALt3uwB3d3d3d3d3
        d3d3dwC7d7sAd3d3d3eIiHeIiIiIAAAAAHeIiIiIiIh3iIiIiAAAAAB3iIiIiIiId4iIiIiIiIiId4iI
        iIiIiHeIiIiIiIiIiHeIiIiId3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3
        d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAoAAAAEAAAACAAAAABAAQAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAA
        AACAAIAAgIAAAMDAwACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AHd3d3d3d3d3d3d3d3d3
        d3dmciIiIiIiImZyIiAAIiIid3d/B7cHd3dVV/B7e3ByIlVX8Le3MHIid3fwcAAwd3dmZvALewAid2Zm
        8Le3sCJ3d3d3C3sHd3eIeIiAAAeIiIh4iIiIh4iId3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>